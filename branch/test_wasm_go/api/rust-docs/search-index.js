var searchIndex = JSON.parse('{\
"cardano_chain_follower":{"doc":"Cardano chain follower.","t":"NENGDDDNDENNENENNDGNNNNLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Block","ChainUpdate","Err","Error","Follower","FollowerConfig","FollowerConfigBuilder","Mainnet","MultiEraBlockData","Network","Ok","Origin","Point","Point","PointOrTip","Preprod","Preview","Reader","Result","Rollback","Specific","Testnet","Tip","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","chain_update_buffer_size","chain_update_buffer_size","clone","clone_into","connect","connect","decode","decode","decode_fragment","default","encode","encode_fragment","eq","equivalent","equivalent","equivalent","equivalent","fmt","follow_from","follow_from","from","from","from","from","from","from","from","from","from","from","from_ref","hash","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","max_await_retries","max_await_retries","new","next","read_block","read_block_range","set_read_pointer","slot_or_default","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"cardano_chain_follower"],[137,"pallas_traverse"],[138,"minicbor::decode::decoder"],[139,"minicbor::decode::error"],[140,"core::result"],[141,"core::error"],[142,"alloc::alloc"],[143,"alloc::boxed"],[144,"minicbor::encode::encoder"],[145,"minicbor::encode::error"],[146,"minicbor::encode::write"],[147,"alloc::vec"],[148,"core::fmt"],[149,"core::fmt"],[150,"core::hash"],[151,"tonic::request"],[152,"core::option"],[153,"core::any"]],"d":["New block inserted on chain.","Enum of chain updates received by the follower.","Contains the error value","Crate error type.","Cardano chain follower.","Configuration for the Cardano chain follower.","Builder used to create <code>FollowerConfig</code>s.","Cardano mainnet network.","CBOR encoded data of a multi-era block.","Enum of possible Cardano networks.","Contains the success value","","A point within a chain","Represents a specific point of the chain.","A point in the chain or the tip.","Cardano pre-production network.","Cardano preview network.","Cardano chain Reader.","Crate result type.","Chain rollback to the given block.","","Cardano testnet network.","Represents the tip of the chain.","","","","","","","","","","","","","","","","","","","Builds a <code>FollowerConfig</code>.","Sets the size of the chain updates buffer used by the …","Configured chain update buffer size.","","","Connects the Reader to a producer using the node-to-node …","Connects the follower to a producer using the node-to-node …","Decodes the data into a multi-era block.","","","","","","","","","","","","Sets the point at which the follower will start following …","Where to start following from.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Sets the maximum number of retries the <code>Follower</code> will …","Configured maximum await retry count.","","Receive the next chain update from the producer.","Reads a single block from the chain.","Reads a range of blocks from the chain.","Set the follower’s chain read-pointer. Returns None if …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[34,0,9,0,0,0,0,7,0,0,9,4,0,28,0,7,7,0,0,34,4,7,28,28,11,7,8,34,1,2,10,4,28,11,7,8,34,1,2,10,4,1,1,2,4,4,8,10,11,4,4,1,4,4,4,4,4,4,4,4,1,2,28,28,11,7,8,34,1,2,10,4,4,4,28,11,7,8,34,1,2,10,4,28,11,7,8,34,1,2,10,4,1,2,4,10,8,8,10,4,4,28,11,7,8,34,1,2,10,4,28,11,7,8,34,1,2,10,4,28,11,7,8,34,1,2,10,4,28,11,7,8,34,1,2,10,4],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,2],[[1,3],1],0,[4,4],[[-1,-2],5,[],[]],[[6,7],[[9,[8]]]],[[6,7,2],[[9,[10]]]],[11,[[9,[12]]]],[[13,5],[[15,[4,14]]]],[[[17,[16]]],[[15,[-1,[20,[18,19]]]]],[]],[[],1],[[4,[21,[-1]],5],[[15,[5,22]]],23],[-1,[[15,[[24,[16,19]],[20,[18,19]]]]],[]],[[4,4],25],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[4,26],[[15,[5,27]]]],[[1,-1],1,[[29,[28]]]],0,[-1,-1,[]],[4,28],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[4,-1],5,30],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[[1,32],1],0,[[33,[24,[16,19]]],4],[10,[[9,[34]]]],[[8,-1],[[9,[11]]],[[29,[28]]]],[[8,4,-1],[[9,[[24,[11]]]]],[[29,[28]]]],[[10,-1],[[9,[[35,[4]]]]],[[29,[28]]]],[4,33],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"FollowerConfigBuilder",0],[3,"FollowerConfig",0],[15,"usize"],[4,"Point",0],[15,"tuple"],[15,"str"],[4,"Network",0],[3,"Reader",0],[6,"Result",0],[3,"Follower",0],[3,"MultiEraBlockData",0],[4,"MultiEraBlock",137],[3,"Decoder",138],[3,"Error",139],[4,"Result",140],[15,"u8"],[15,"slice"],[8,"Error",141],[3,"Global",142],[3,"Box",143],[3,"Encoder",144],[3,"Error",145],[8,"Write",146],[3,"Vec",147],[15,"bool"],[3,"Formatter",148],[3,"Error",148],[4,"PointOrTip",0],[8,"Into",149],[8,"Hasher",150],[3,"Request",151],[15,"u32"],[15,"u64"],[4,"ChainUpdate",0],[4,"Option",152],[3,"TypeId",153]],"b":[]},\
"follow_chain_updates":{"doc":"This example shows how to use the chain follower to follow …","t":"F","n":["main"],"q":[[0,"follow_chain_updates"],[1,"core::error"],[2,"alloc::boxed"],[3,"core::result"]],"d":[""],"i":[0],"f":[[[],[[4,[1,[3,[2]]]]]]],"c":[],"p":[[15,"tuple"],[8,"Error",1],[3,"Box",2],[4,"Result",3]],"b":[]},\
"hermes":{"doc":"The Hermes Node","t":"F","n":["main"],"q":[[0,"hermes"]],"d":[""],"i":[0],"f":[[[],1]],"c":[],"p":[[15,"tuple"]],"b":[]},\
"read_block":{"doc":"This example shows how to use the chain reader to download …","t":"F","n":["main"],"q":[[0,"read_block"],[1,"core::error"],[2,"alloc::boxed"],[3,"core::result"]],"d":[""],"i":[0],"f":[[[],[[4,[1,[3,[2]]]]]]],"c":[],"p":[[15,"tuple"],[8,"Error",1],[3,"Box",2],[4,"Result",3]],"b":[]},\
"read_block_range":{"doc":"This example shows how to use the chain reader to download …","t":"F","n":["main"],"q":[[0,"read_block_range"],[1,"core::error"],[2,"alloc::boxed"],[3,"core::result"]],"d":[""],"i":[0],"f":[[[],[[4,[1,[3,[2]]]]]]],"c":[],"p":[[15,"tuple"],[8,"Error",1],[3,"Box",2],[4,"Result",3]],"b":[]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
